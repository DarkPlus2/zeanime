generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  image      String?
  favorites  Favorite[]
  comments   Comment[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Anime {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  image       String?
  coverImage  String?
  category    String?
  rating      Float?
  releaseDate DateTime?
  status      String?     // e.g. "Ongoing", "Completed"
  type        String?     // e.g. "TV", "Movie"
  episodes    Episode[]
  genres      Genre[]     @relation("AnimeGenres")
  favorites   Favorite[]
  comments    Comment[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Genre {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  animes   Anime[]  @relation("AnimeGenres")
}

model Episode {
  id          Int       @id @default(autoincrement())
  title       String
  number      Int
  description String?
  embedUrl1   String?
  embedUrl2   String?
  embedUrl3   String?
  anime       Anime     @relation(fields: [animeId], references: [id], onDelete: Cascade)
  animeId     Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  anime     Anime    @relation(fields: [animeId], references: [id], onDelete: Cascade)
  animeId   Int
  createdAt DateTime @default(now())

  @@unique([userId, animeId]) // prevent duplicate favorites
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Float?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  anime     Anime    @relation(fields: [animeId], references: [id], onDelete: Cascade)
  animeId   Int
  createdAt DateTime @default(now())
}
